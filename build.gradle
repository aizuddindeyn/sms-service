buildscript {
    ext {
        springBootVersion = '2.3.5.RELEASE'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        maven {
            url 'https://repo.spring.io/snapshot'
        }
        maven {
            url 'https://repo.spring.io/milestone'
        }
        maven {
            name 'ICM'
            url 'http://maven.icm.edu.pl/artifactory/repo/'
        }
    }
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    group = 'org.aizuddindeyn'
    version = '1.0-SNAPSHOT'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    compileJava.options.encoding = "UTF-8"

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name 'ICM'
            url 'http://maven.icm.edu.pl/artifactory/repo/'
        }
        jcenter()
    }

    ext {
        // Spring Boot App
        springBootVersion       = '2.3.5.RELEASE'
        jacksonJava8Version     = '2.11.3'
        // Database
        h2databaseVersion       = '1.4.200'
        hibernateJava8Version   = '5.4.22.Final'
        myBatisVersion          = '2.1.3'
        // Logger
        lmaxDisruptorVersion    = '3.4.2'
        slf4jVersion            = '1.7.30'
        // Utility Library
        apacheCommonLangVersion = '3.11'
        apacheCollectionVersion = '4.4'
        lombokVersion           = '1.18.16'
        guavaVersion            = '30.0-jre'
        gsonVersion             = '2.8.6'
        // HTTP
        okHttp3Version          = '4.9.0'
        httpClientVersion       = '4.5.13'
        // Cache
        javaxCacheVersion       = '1.1.1'
        ehCacheVersion          = '3.9.0'
        // Service Provider
        alicloudSdkVersion      = '4.0.3'
        awsSnsSdkVersion        = '1.11.895'
        twilioSdkVersion        = '8.2.0'
        // Testing
        junitVersion            = '5.7.0'

        springLib = [
                springBoot      : "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
                springBootLog   : "org.springframework.boot:spring-boot-starter-log4j2:${springBootVersion}",
                springBootJpa   : "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}",
                myBatis         : "org.mybatis.spring.boot:mybatis-spring-boot-starter:${myBatisVersion}"
        ]

        dbLib = [
                h2database      : "com.h2database:h2:${h2databaseVersion}",
                hibernateJ8     : "org.hibernate:hibernate-java8:${hibernateJava8Version}"
        ]

        spLib = [
                alicloudSdk     : "com.aliyun:aliyun-java-sdk-core:${alicloudSdkVersion}",
                awsSnsSdk       : "com.amazonaws:aws-java-sdk-sns:${awsSnsSdkVersion}",
                twilioSdk       : "com.twilio.sdk:twilio:${twilioSdkVersion}"
        ]

        extLib = [
                apacheLang      : "org.apache.commons:commons-lang3:${apacheCommonLangVersion}",
                apacheCollection: "org.apache.commons:commons-collections4:${apacheCollectionVersion}",
                apacheHttpClient: "org.apache.httpcomponents:httpclient:${httpClientVersion}",
                lmax            : "com.lmax:disruptor:${lmaxDisruptorVersion}",
                slf4jApi        : "org.slf4j:slf4j-api:${slf4jVersion}",
                lombok          : "org.projectlombok:lombok:${lombokVersion}",
                guava           : "com.google.guava:guava:${guavaVersion}",
                okHttp3         : "com.squareup.okhttp3:okhttp:${okHttp3Version}",
                gson            : "com.google.code.gson:gson:${gsonVersion}",
                jacksonJava8    : "com.fasterxml.jackson.module:jackson-modules-java8:${jacksonJava8Version}"
        ]

         cacheLib = [
                 springBootCache: "org.springframework.boot:spring-boot-starter-cache:${springBootVersion}",
                 javaxCache     : "javax.cache:cache-api:${javaxCacheVersion}",
                 ehCache        : "org.ehcache:ehcache:${ehCacheVersion}"
         ]

        junitLib = [
                junit           : "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
        ]
    }

    configurations {
        compile {
            exclude group: 'org.slf4j', module: 'slf4j-log4j12'
            all*.exclude module: 'spring-boot-starter-logging'
        }
    }

    dependencies {
        // Spring framework
        implementation springLib.values()
        compileOnly extLib.lombok
        annotationProcessor extLib.lombok
        implementation extLib.apacheLang
        implementation extLib.apacheCollection

        // Testing compilation
        testCompile junitLib.values()
    }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
            resources {
                srcDir 'src/main/resources'
            }
        }
        test {
            java {
                srcDir 'src/test/java'
            }
            resources {
                srcDir 'src/test/resources'
            }
        }
    }
}
